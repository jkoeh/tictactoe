{"version":3,"sources":["styles/game.module.css","styles/moves.module.css","styles/board.module.css","styles/square.module.css","styles/winningLine.module.css","components/square.jsx","components/winningLine.jsx","components/board.jsx","components/moves.jsx","components/game.jsx","index.js"],"names":["module","exports","getBorderStyle","index","borderStyle","border","borderLeft","borderTop","borderBottom","includes","borderRight","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","marginTop","Square","props","shouldHighLight","highLighted","textShadow","style","className","styles","square","onClick","value","WinningLine","winningSquare","winnerString","JSON","stringify","x1","x2","y1","y2","calculateRenderingPosition","svgContainer","height","width","xmlns","stroke","strokeWidth","Board","squares","answer","line","a","b","c","i","key","this","getWinningSquares","j","push","renderSquare","boardRows","renderBoardRow","board","position","Component","Moves","moveList","history","map","step","move","coordinate","x","y","currentMove","stepNumber","desc","reverse","Game","state","Array","fill","currentMark","asc","winner","setState","newHistory","slice","currentSquares","calculateWinner","newState","concat","draw","status","moves","jumpTo","container","sortBtn","title","sortMove","game","restart","handleClick","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,MAAQ,sB,uBCA9FD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,YAAc,2BAA2B,KAAO,sB,gBCArGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAY,2B,kBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,oC,mwBCkBjC,SAASC,EAAeC,GACtB,IAAIC,EAAc,CAChBC,OAAQ,kBA+CV,OA5CIF,EAAQ,IAAM,IAChBC,EAAYE,WAAa,UAEvBH,EAAQ,IACVC,EAAYG,UAAY,SACxBH,EAAYI,aAAe,UAEzB,CAAC,EAAG,EAAG,GAAGC,SAASN,KAAQC,EAAYM,YAAc,UACrDP,EAAQ,IAAGC,EAAYI,aAAe,UAE5B,IAAVL,IAAaC,EAAYO,qBAAuB,cAEtC,IAAVR,IAAaC,EAAYI,aAAe,UAC9B,IAAVL,IAEFC,EAAYQ,oBAAsB,aAClCR,EAAYS,uBAAyB,cAKzB,IAAVV,IACFC,EAAYO,qBAAuB,cACnCP,EAAYI,aAAe,UAEf,IAAVL,IACFC,EAAYG,UAAY,SACxBH,EAAYM,YAAc,UAEd,IAAVP,IACFC,EAAYG,UAAY,SACxBH,EAAYU,WAAa,OACzBV,EAAYM,YAAc,SAC1BN,EAAYE,WAAa,YACzBF,EAAYS,uBAAyB,cAGzB,IAAVV,IACFC,EAAYW,UAAY,OACxBX,EAAYE,WAAa,YAEzBF,EAAYO,qBAAuB,aACnCP,EAAYS,uBAAyB,cAEhCT,EAGMY,MArEA,SAAAC,GACb,IAAIC,EAAkBD,EAAME,YACxB,CAAEC,WAAY,oBACd,GACJ,OACE,4BACEC,MAAK,KACAH,EADA,GAEAhB,EAAee,EAAMd,QAE1BmB,UAAWC,IAAOC,OAClBC,QAAS,kBAAMR,EAAMQ,YAEpBR,EAAMS,Q,kCCgBb,IAmBeC,EAnBK,SAAAV,GAAU,IAAD,EA5B7B,SAAoCW,GAClC,IAAIC,EAAeC,KAAKC,UAAUH,GAClC,OAAIC,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,KAAMC,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAE3CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,MAAOC,GAAI,MAAOC,GAAI,KAAMC,GAAI,OAE3CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,KAAMC,GAAI,MAAOC,GAAI,KAAMC,GAAI,OAE1CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,MAAOC,GAAI,MAAOC,GAAI,KAAMC,GAAI,OAE3CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,MAAOC,GAAI,MAAOC,GAAI,KAAMC,GAAI,OAE3CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,MAAOC,GAAI,KAAMC,GAAI,KAAMC,GAAI,OAE1CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,KAAMC,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAE3CN,IAAiBC,KAAKC,UAAU,CAAC,EAAG,EAAG,IAClC,CAAEC,GAAI,KAAMC,GAAI,MAAOC,GAAI,MAAOC,GAAI,YAD/C,EAOyBC,CADDnB,EAAlBW,eACAI,EAFqB,EAErBA,GAAIC,EAFiB,EAEjBA,GAAIC,EAFa,EAEbA,GAAIC,EAFS,EAETA,GAClB,OACE,yBAAKb,UAAWC,IAAOc,cACrB,yBAAKC,OAAO,OAAOC,MAAM,OAAOC,MAAM,8BACpC,0BACEC,OAAO,OACPC,YAAY,MACZV,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,OC0BCQ,E,0LA9DKC,GAYhB,IAXA,IAUIC,EACJ,MAXc,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGT,eAAwB,CAAnB,IAAIC,EAAI,KAAW,cACJA,EADI,GACfC,EADe,KACZC,EADY,KACTC,EADS,KAElBL,EAAQG,IAAMH,EAAQI,IAAMJ,EAAQK,IAAML,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,KAChGJ,EAAS,CAACE,EAAGC,EAAGC,IAGpB,OAAOJ,I,mCAEIK,EAAG/B,GAAc,IAAD,OAC3B,OACE,kBAAC,EAAD,CACEgC,IAAKD,EACL/C,MAAO+C,EACP/B,YAAaA,EACbO,MAAO0B,KAAKnC,MAAM2B,QAAQM,GAC1BzB,QAAS,kBAAM,EAAKR,MAAMQ,QAAQyB,Q,qCAIzBA,GAGb,IAFA,IAAItB,EAAgBwB,KAAKC,kBAAkBD,KAAKnC,MAAM2B,SAClDA,EAAU,GACLU,EAAI,EAAQ,EAAJJ,EAAOI,EAAQ,EAAJJ,EAAQ,EAAGI,IAAK,CAC1C,IAAInC,EAAcS,GAAiBA,EAAcnB,SAAS6C,GAC1DV,EAAQW,KAAKH,KAAKI,aAAaF,EAAGnC,IAEpC,OACE,yBAAKgC,IAAKD,EAAG5B,UAAWC,IAAO,cAC5BqB,K,+BAOL,IAFA,IAAIhB,EAAgBwB,KAAKC,kBAAkBD,KAAKnC,MAAM2B,SAClDa,EAAY,GACPP,EAAI,EAAGA,EAAI,EAAGA,IACrBO,EAAUF,KAAKH,KAAKM,eAAeR,IAErC,OACE,yBAAK5B,UAAWC,IAAOoC,OACpB/B,GACC,yBAAKP,MAAO,CAAEuC,SAAU,WAAYrB,MAAO,QAASD,OAAQ,UAC1D,kBAAC,EAAD,CAAaV,cAAeA,KAG/B6B,O,GA1DWI,a,gBCEpB,IAaeC,EAbD,SAAC7C,GACb,IAAI8C,EAAW9C,EAAM+C,QAAQC,KAAI,SAACC,EAAMC,GAAU,IAN3BjB,EAM0B,GAN1BA,EAOYgB,EAAKE,aAN/B,EAAU,CAAEC,EAAG,EAAGC,EAAGpB,EAAI,GACzBA,GAAK,EAAU,CAAEmB,EAAG,EAAGC,EAAGpB,EAAI,GAC3B,CAAEmB,EAAG,EAAGC,EAAGpB,EAAI,GAIjBmB,EADuC,EACvCA,EAAGC,EADoC,EACpCA,EACPC,EAActD,EAAMuD,aAAeL,EAAO5C,IAAOgD,YAAc,GAC7DE,EAAON,EAAI,uBAAmBA,EAAnB,gBAA+BE,EAA/B,eAAuCC,EAAvC,KAA8C,mBAC/D,OACE,wBAAI7C,QAAS,kBAAMR,EAAMQ,QAAQ0C,IAAO7C,UAAWC,IAAO4C,KAAMhB,IAAKgB,GACnE,yBAAK7C,UAAWiD,GAAcE,OAIpC,OAAO,wBAAInD,UAAWC,IAAOwC,UAAW9C,EAAMyD,QAAUX,EAAWA,EAASW,Y,kPC6F/DC,E,YA3Gb,WAAY1D,GAAQ,IAAD,8BACjB,4CAAMA,KACD2D,MAAQ,CACXZ,QAAS,CAAC,CAAEpB,QAASiC,MAAM,GAAGC,KAAK,MAAOV,WAAY,OACtDW,YAAa,IACbP,WAAY,EACZQ,KAAK,EACLC,OAAQ,MAPO,E,uEAWjB7B,KAAK8B,SAAS,CACZlB,QAAS,CAAC,CAAEpB,QAASiC,MAAM,GAAGC,KAAK,MAAOV,WAAY,OACtDW,YAAa,IACbP,WAAY,EACZQ,KAAK,EACLC,OAAQ,S,sCAGIrC,GAYd,IAXA,IAWA,MAXc,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGT,eAAwB,CAAnB,IAAIE,EAAI,KAAW,cACJA,EADI,GACfC,EADe,KACZC,EADY,KACTC,EADS,KAEtB,GAAIL,EAAQG,IAAMH,EAAQI,IAAMJ,EAAQK,IAAML,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,GAChG,OAAOL,EAAQG,GAInB,OAAO,O,kCAGGG,GAAI,IAAD,EACmBE,KAAKwB,MAA7BZ,EADK,EACLA,QAASQ,EADJ,EACIA,WACXW,EAAanB,EAAQoB,MAAM,EAAGZ,EAAa,GAC3Ca,EAAiBF,EAAWX,GAAY5B,QAC9C,IAAIyC,EAAenC,KAAME,KAAKkC,gBAAgBD,GAA9C,CACA,IAAIE,E,yVAAQ,IAAQF,GACpBE,EAASrC,GAAKE,KAAKwB,MAAMG,YACzB3B,KAAK8B,SAAS,CACZlB,QAASmB,EAAWK,OAAO,CAAC,CAAE5C,QAAS2C,EAAUnB,WAAYlB,KAC7D6B,YAAwC,MAA3B3B,KAAKwB,MAAMG,YAAsB,IAAM,IACpDP,WAAYA,EAAa,O,6BAGtBA,GACLpB,KAAK8B,SAAS,CACZV,aACAO,YAAaP,EAAa,IAAM,EAAI,IAAM,Q,iCAK5C,IAAIQ,GAAM5B,KAAKwB,MAAMI,IACrB5B,KAAK8B,SAAS,CAAEF,U,+BAER,IAAD,SACyB5B,KAAKwB,MAA7BZ,EADD,EACCA,QAASQ,EADV,EACUA,WACXa,EAAiBrB,EAAQQ,GAAY5B,QACrCqC,EAAS7B,KAAKkC,gBAAgBD,GAC9BI,EAAkB,OAAXR,GAAmBT,GAAc,EAExCkB,EAAST,EAAM,oBACJA,EADI,cAEjBQ,EACA,iBADI,uBAEYrC,KAAKwB,MAAMG,aAEzBY,EACJ,kBAAC,EAAD,CAAO3B,QAASA,EAASQ,WAAYA,EAAYE,QAAStB,KAAKwB,MAAMI,IAAKvD,QAAS,SAACyB,GAAD,OAAO,EAAK0C,OAAO1C,MAExG,OACE,yBAAK5B,UAAWC,IAAOsE,WACrB,6BACE,yBAAKvE,UAAS,UAAKC,IAAOuE,QAAZ,YAAuBvE,IAAOwE,OAAStE,QAAS,kBAAM,EAAKuE,aAAzE,QAICL,GAEH,yBAAKrE,UAAWC,IAAO0E,MACrB,yBACE3E,UAAWC,IAAOwE,MAClBtE,QAAS,YACHwD,GAAUQ,IACZ,EAAKS,YAIRR,GAEH,kBAAC,EAAD,CAAO9C,QAASyC,EAAgB5D,QAAS,SAACyB,GAAD,OAAO,EAAKiD,YAAYjD,OAEnE,mC,GAvGWW,aCGnBuC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.d56e6bcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"game_container__3SBO5\",\"sortBtn\":\"game_sortBtn__1Bavt\",\"title\":\"game_title__3oiFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveList\":\"moves_moveList__1m1LY\",\"currentMove\":\"moves_currentMove__144sQ\",\"move\":\"moves_move__2b0Ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__SwQNT\",\"board-row\":\"board_board-row__22hHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"square_square__1s-OR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgContainer\":\"winningLine_svgContainer__3dI9s\"};","import React from \"react\";\nimport styles from \"../styles/square.module.css\";\nconst Square = props => {\n  let shouldHighLight = props.highLighted\n    ? { textShadow: \"2px 2px 3px #fff\" }\n    : {};\n  return (\n    <button\n      style={{\n        ...shouldHighLight,\n        ...getBorderStyle(props.index)\n      }}\n      className={styles.square}\n      onClick={() => props.onClick()}\n    >\n      {props.value}\n    </button>\n  );\n};\nfunction getBorderStyle(index) {\n  let borderStyle = {\n    border: \"3px solid #fff\"\n  };\n\n  if (index % 3 === 0) {\n    borderStyle.borderLeft = \"hidden\";\n  }\n  if (index < 3) {\n    borderStyle.borderTop = \"hidden\";\n    borderStyle.borderBottom = \"hidden\";\n  }\n  if ([2, 5, 8].includes(index)) borderStyle.borderRight = \"hidden\";\n  if (index > 5) borderStyle.borderBottom = \"hidden\";\n\n  if (index === 0) borderStyle.borderTopRightRadius = \"15px 255px\";\n\n  if (index === 2) borderStyle.borderBottom = \"hidden\";\n  if (index === 3) {\n    // borderStyle.borderBottom = \"4px solid\";\n    borderStyle.borderTopLeftRadius = \"255px 15px\";\n    borderStyle.borderBottomLeftRadius = \"255px 15px\";\n  }\n  if (index === 4) {\n  }\n\n  if (index === 5) {\n    borderStyle.borderTopRightRadius = \" 255px 15px\";\n    borderStyle.borderBottom = \"hidden\";\n  }\n  if (index === 6) {\n    borderStyle.borderTop = \"hidden\";\n    borderStyle.borderRight = \"hidden\";\n  }\n  if (index === 7) {\n    borderStyle.borderTop = \"hidden\";\n    borderStyle.marginLeft = \"-4px\";\n    borderStyle.borderRight = \"hidden\";\n    borderStyle.borderLeft = \"5px solid\";\n    borderStyle.borderBottomLeftRadius = \"15px 255px\";\n  }\n\n  if (index === 8) {\n    borderStyle.marginTop = \"-3px\";\n    borderStyle.borderLeft = \"5px solid\";\n    // borderStyle.borderTop = \"4px solid\";\n    borderStyle.borderTopRightRadius = \"255px 15px\";\n    borderStyle.borderBottomLeftRadius = \"15px 255px\";\n  }\n  return borderStyle;\n}\n\nexport default Square;\n","import React from \"react\";\nimport styles from \"../styles/winningLine.module.css\";\n\nfunction calculateRenderingPosition(winningSquare) {\n  let winnerString = JSON.stringify(winningSquare);\n  if (winnerString === JSON.stringify([0, 1, 2])) {\n    return { x1: \"5%\", x2: \"95%\", y1: \"15%\", y2: \"15%\" };\n  }\n  if (winnerString === JSON.stringify([0, 3, 6])) {\n    return { x1: \"15%\", x2: \"16%\", y1: \"5%\", y2: \"95%\" };\n  }\n  if (winnerString === JSON.stringify([0, 4, 8])) {\n    return { x1: \"5%\", x2: \"95%\", y1: \"5%\", y2: \"95%\" };\n  }\n  if (winnerString === JSON.stringify([1, 4, 7])) {\n    return { x1: \"50%\", x2: \"50%\", y1: \"5%\", y2: \"95%\" };\n  }\n  if (winnerString === JSON.stringify([2, 5, 8])) {\n    return { x1: \"84%\", x2: \"84%\", y1: \"5%\", y2: \"95%\" };\n  }\n  if (winnerString === JSON.stringify([2, 4, 6])) {\n    return { x1: \"95%\", x2: \"5%\", y1: \"5%\", y2: \"95%\" };\n  }\n  if (winnerString === JSON.stringify([3, 4, 5])) {\n    return { x1: \"5%\", x2: \"95%\", y1: \"50%\", y2: \"50%\" };\n  }\n  if (winnerString === JSON.stringify([6, 7, 8])) {\n    return { x1: \"5%\", x2: \"95%\", y1: \"83%\", y2: \"83%\" };\n  }\n}\n\nconst WinningLine = props => {\n  let { winningSquare } = props;\n  var { x1, x2, y1, y2 } = calculateRenderingPosition(winningSquare);\n  return (\n    <div className={styles.svgContainer}>\n      <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\">\n        <line\n          stroke=\"#FFF\"\n          strokeWidth=\"3px\"\n          x1={x1}\n          x2={x2}\n          y1={y1}\n          y2={y2}\n        ></line>\n      </svg>\n    </div>\n  );\n};\n\nexport default WinningLine;\n","import React, { Component } from 'react';\nimport Square from './square';\nimport styles from '../styles/board.module.css';\n\nimport WinningLine from './winningLine';\n\nclass Board extends Component {\n  getWinningSquares(squares) {\n    const lines = [\n      [0, 1, 2],\n      [0, 4, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [2, 4, 6],\n      [3, 4, 5],\n      [6, 7, 8],\n    ];\n    let answer;\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (squares[a] && squares[b] && squares[c] && squares[a] === squares[b] && squares[b] === squares[c]) {\n        answer = [a, b, c];\n      }\n    }\n    return answer;\n  }\n  renderSquare(i, highLighted) {\n    return (\n      <Square\n        key={i}\n        index={i}\n        highLighted={highLighted}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  renderBoardRow(i) {\n    let winningSquare = this.getWinningSquares(this.props.squares);\n    let squares = [];\n    for (let j = 0 + i * 3; j < i * 3 + 3; j++) {\n      let highLighted = winningSquare && winningSquare.includes(j);\n      squares.push(this.renderSquare(j, highLighted));\n    }\n    return (\n      <div key={i} className={styles['board-row']}>\n        {squares}\n      </div>\n    );\n  }\n  render() {\n    let winningSquare = this.getWinningSquares(this.props.squares);\n    let boardRows = [];\n    for (let i = 0; i < 3; i++) {\n      boardRows.push(this.renderBoardRow(i));\n    }\n    return (\n      <div className={styles.board}>\n        {winningSquare && (\n          <div style={{ position: 'absolute', width: '297px', height: '297px' }}>\n            <WinningLine winningSquare={winningSquare} />\n          </div>\n        )}\n        {boardRows}\n      </div>\n    );\n  }\n}\nexport default Board;\n","import React from 'react';\nimport styles from '../styles/moves.module.css';\n\nfunction getXYCoordinate(i) {\n  if (i <= 2) return { x: 1, y: i + 1 };\n  else if (i <= 5) return { x: 2, y: i - 2 };\n  else return { x: 3, y: i - 5 };\n}\nconst Moves = (props) => {\n  let moveList = props.history.map((step, move) => {\n    const { x, y } = getXYCoordinate(step.coordinate);\n    let currentMove = props.stepNumber === move ? styles.currentMove : {};\n    const desc = move ? `Go to move # ${move} (x: ${x}, y:${y})` : 'Go to game start';\n    return (\n      <li onClick={() => props.onClick(move)} className={styles.move} key={move}>\n        <div className={currentMove}>{desc}</div>\n      </li>\n    );\n  });\n  return <ul className={styles.moveList}>{props.reverse ? moveList : moveList.reverse()}</ul>;\n};\nexport default Moves;\n","import React, { Component } from 'react';\nimport Board from './board';\nimport Moves from './moves';\nimport styles from '../styles/game.module.css';\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null), coordinate: null }],\n      currentMark: 'X',\n      stepNumber: 0,\n      asc: true,\n      winner: null,\n    };\n  }\n  restart() {\n    this.setState({\n      history: [{ squares: Array(9).fill(null), coordinate: null }],\n      currentMark: 'X',\n      stepNumber: 0,\n      asc: true,\n      winner: null,\n    });\n  }\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [0, 4, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [2, 4, 6],\n      [3, 4, 5],\n      [6, 7, 8],\n    ];\n\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (squares[a] && squares[b] && squares[c] && squares[a] === squares[b] && squares[b] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  handleClick(i) {\n    const { history, stepNumber } = this.state;\n    const newHistory = history.slice(0, stepNumber + 1);\n    const currentSquares = newHistory[stepNumber].squares;\n    if (currentSquares[i] || this.calculateWinner(currentSquares)) return;\n    let newState = { ...currentSquares };\n    newState[i] = this.state.currentMark;\n    this.setState({\n      history: newHistory.concat([{ squares: newState, coordinate: i }]),\n      currentMark: this.state.currentMark === 'X' ? 'O' : 'X',\n      stepNumber: stepNumber + 1,\n    });\n  }\n  jumpTo(stepNumber) {\n    this.setState({\n      stepNumber,\n      currentMark: stepNumber % 2 === 0 ? 'X' : 'O',\n    });\n  }\n\n  sortMove() {\n    let asc = this.state.asc ? false : true;\n    this.setState({ asc });\n  }\n  render() {\n    const { history, stepNumber } = this.state;\n    const currentSquares = history[stepNumber].squares;\n    const winner = this.calculateWinner(currentSquares);\n    const draw = winner === null && stepNumber >= 9;\n\n    const status = winner\n      ? `Winner is ${winner}. Restart?`\n      : draw\n      ? 'Draw, restart?'\n      : `Next player: ${this.state.currentMark}`;\n\n    const moves = (\n      <Moves history={history} stepNumber={stepNumber} reverse={this.state.asc} onClick={(i) => this.jumpTo(i)} />\n    );\n    return (\n      <div className={styles.container}>\n        <div>\n          <div className={`${styles.sortBtn} ${styles.title}`} onClick={() => this.sortMove()}>\n            Sort\n          </div>\n\n          {moves}\n        </div>\n        <div className={styles.game}>\n          <div\n            className={styles.title}\n            onClick={() => {\n              if (winner || draw) {\n                this.restart();\n              }\n            }}\n          >\n            {status}\n          </div>\n          <Board squares={currentSquares} onClick={(i) => this.handleClick(i)} />\n        </div>\n        <div></div>\n      </div>\n    );\n  }\n}\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/game\";\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}